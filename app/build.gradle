apply plugin: 'com.android.library'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        minSdkVersion 9
        targetSdkVersion 25
        versionCode 1
        versionName '1.0'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    productFlavors {
    }
}

dependencies {
    compile 'com.android.support:support-v4:25.3.1'
    compile 'org.apache.commons:commons-lang3:3.5'
    compile files('libs/glide-3.7.0.jar')
    compile files('libs/support-annotations-25.3.1.jar')
}

// Java8 not fully supported in library projects yet, https://code.google.com/p/android/issues/detail?id=211386
// this is a temporary workaround to get at least lambdas compiling
gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xbootclasspath/a:" + System.properties.get("java.home") + "/lib/rt.jar"
    }
}

task deleteJar(type: Delete) {
    delete 'libs/android-utils.jar'
}

task createJar(type: Copy) {
    from('build/intermediates/bundles/release/')
    into('build/libs/')
    include('classes.jar')
    rename('classes.jar', 'app-android-utils-bin.jar')
}

createJar.dependsOn(deleteJar, build)

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'android-utils-sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator)) + configurations.compile
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'android-utils-javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}